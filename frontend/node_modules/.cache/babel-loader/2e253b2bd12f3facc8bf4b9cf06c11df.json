{"ast":null,"code":"var DEFAULT_STYLES, LIST_STYLES, Normalizer, Renderer, dom, rule, _;\n_ = require('lodash');\ndom = require('../lib/dom');\nNormalizer = require('../lib/normalizer');\nDEFAULT_STYLES = {\n  'html': {\n    'height': '100%',\n    'width': '100%'\n  },\n  'body': {\n    'box-sizing': 'border-box',\n    'cursor': 'text',\n    'font-family': \"'Helvetica', 'Arial', sans-serif\",\n    'font-size': '13px',\n    'height': '100%',\n    'line-height': '1.42',\n    'margin': '0px',\n    'overflow-x': 'hidden',\n    'overflow-y': 'auto',\n    'padding': '12px 15px'\n  },\n  '.editor-container': {\n    'height': '100%',\n    'outline': 'none',\n    'position': 'relative',\n    'tab-size': '4',\n    'white-space': 'pre-wrap'\n  },\n  '.editor-container div': {\n    'margin': '0',\n    'padding': '0'\n  },\n  '.editor-container a': {\n    'text-decoration': 'underline'\n  },\n  '.editor-container b': {\n    'font-weight': 'bold'\n  },\n  '.editor-container i': {\n    'font-style': 'italic'\n  },\n  '.editor-container s': {\n    'text-decoration': 'line-through'\n  },\n  '.editor-container u': {\n    'text-decoration': 'underline'\n  },\n  '.editor-container img': {\n    'max-width': '100%'\n  },\n  '.editor-container blockquote': {\n    'margin': '0 0 0 2em',\n    'padding': '0'\n  },\n  '.editor-container ol': {\n    'margin': '0 0 0 2em',\n    'padding': '0',\n    'list-style-type': 'decimal'\n  },\n  '.editor-container ul': {\n    'margin': '0 0 0 2em',\n    'padding': '0',\n    'list-style-type': 'disc'\n  }\n};\nLIST_STYLES = ['decimal', 'lower-alpha', 'lower-roman'];\nrule = '.editor-container ol > li';\n_.each([1, 2, 3, 4, 5, 6, 7, 8, 9], function (i) {\n  rule += ' > ol';\n  DEFAULT_STYLES[rule] = {\n    'list-style-type': LIST_STYLES[i % 3]\n  };\n  return rule += ' > li';\n});\nif (dom.isIE(10)) {\n  DEFAULT_STYLES[dom.DEFAULT_BREAK_TAG] = {\n    'display': 'none'\n  };\n}\nRenderer = function () {\n  Renderer.objToCss = function (obj) {\n    return _.map(obj, function (value, key) {\n      var innerStr;\n      innerStr = _.map(value, function (innerValue, innerKey) {\n        return \"\" + innerKey + \": \" + innerValue + \";\";\n      }).join(' ');\n      return \"\" + key + \" { \" + innerStr + \" }\";\n    }).join(\"\\n\");\n  };\n  Renderer.buildFrame = function (container) {\n    var iframe, iframeDoc, root;\n    iframe = container.ownerDocument.createElement('iframe');\n    dom(iframe).attributes({\n      frameBorder: '0',\n      height: '100%',\n      width: '100%',\n      title: 'Quill Rich Text Editor',\n      role: 'presentation'\n    });\n    container.appendChild(iframe);\n    iframeDoc = iframe.contentWindow.document;\n    iframeDoc.open();\n    iframeDoc.write('<!DOCTYPE html>');\n    iframeDoc.close();\n    root = iframeDoc.createElement('div');\n    iframeDoc.body.appendChild(root);\n    return [root, iframe];\n  };\n  function Renderer(container, options) {\n    var _ref;\n    this.container = container;\n    this.options = options != null ? options : {};\n    this.container.innerHTML = '';\n    _ref = Renderer.buildFrame(this.container), this.root = _ref[0], this.iframe = _ref[1];\n    this.root.setAttribute('id', this.options.id);\n    this.iframe.setAttribute('name', this.options.id);\n    dom(this.root).addClass('editor-container');\n    dom(this.container).addClass('ql-container');\n    if (dom.isIOS()) {\n      dom(this.container).styles({\n        'overflow': 'auto',\n        '-webkit-overflow-scrolling': 'touch'\n      });\n    }\n    this.addStyles(DEFAULT_STYLES);\n    if (this.options.styles != null) {\n      _.defer(_.bind(this.addStyles, this, this.options.styles));\n    }\n  }\n  Renderer.prototype.addContainer = function (className, before) {\n    var container, refNode;\n    if (before == null) {\n      before = false;\n    }\n    refNode = before ? this.root : null;\n    container = this.root.ownerDocument.createElement('div');\n    dom(container).addClass(className);\n    this.root.parentNode.insertBefore(container, refNode);\n    return container;\n  };\n  Renderer.prototype.addStyles = function (css) {\n    var link, style;\n    if (typeof css === 'object') {\n      style = this.root.ownerDocument.createElement('style');\n      style.type = 'text/css';\n      css = Renderer.objToCss(css);\n      style.appendChild(this.root.ownerDocument.createTextNode(css));\n      return this.root.ownerDocument.head.appendChild(style);\n    } else if (typeof css === 'string') {\n      link = this.root.ownerDocument.createElement('link');\n      dom(link).attributes({\n        type: 'text/css',\n        rel: 'stylesheet',\n        href: css\n      });\n      return this.root.ownerDocument.head.appendChild(link);\n    }\n  };\n  return Renderer;\n}();\nmodule.exports = Renderer;","map":null,"metadata":{},"sourceType":"script"}