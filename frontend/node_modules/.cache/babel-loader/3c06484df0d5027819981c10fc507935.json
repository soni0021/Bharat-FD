{"ast":null,"code":"\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/* eslint-disable react/no-array-index-key */\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { matchScreen } from '../_util/responsiveObserver';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport useSize from '../config-provider/hooks/useSize';\nimport useBreakpoint from '../grid/hooks/useBreakpoint';\nimport DEFAULT_COLUMN_MAP from './constant';\nimport DescriptionsContext from './DescriptionsContext';\nimport useItems from './hooks/useItems';\nimport useRow from './hooks/useRow';\nimport DescriptionsItem from './Item';\nimport Row from './Row';\nimport useStyle from './style';\nconst Descriptions = props => {\n  var _a, _b, _c, _d, _e, _f, _g, _h;\n  const {\n      prefixCls: customizePrefixCls,\n      title,\n      extra,\n      column,\n      colon = true,\n      bordered,\n      layout,\n      children,\n      className,\n      rootClassName,\n      style,\n      size: customizeSize,\n      labelStyle,\n      contentStyle,\n      styles,\n      items,\n      classNames: descriptionsClassNames\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"title\", \"extra\", \"column\", \"colon\", \"bordered\", \"layout\", \"children\", \"className\", \"rootClassName\", \"style\", \"size\", \"labelStyle\", \"contentStyle\", \"styles\", \"items\", \"classNames\"]);\n  const {\n    getPrefixCls,\n    direction,\n    descriptions\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('descriptions', customizePrefixCls);\n  const screens = useBreakpoint();\n  // ============================== Warn ==============================\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Descriptions');\n    [['labelStyle', 'styles={{ label: {} }}'], ['contentStyle', 'styles={{ content: {} }}']].forEach(_ref => {\n      let [deprecatedName, newName] = _ref;\n      warning.deprecated(!(deprecatedName in props), deprecatedName, newName);\n    });\n  }\n  // Column count\n  const mergedColumn = React.useMemo(() => {\n    var _a;\n    if (typeof column === 'number') {\n      return column;\n    }\n    return (_a = matchScreen(screens, Object.assign(Object.assign({}, DEFAULT_COLUMN_MAP), column))) !== null && _a !== void 0 ? _a : 3;\n  }, [screens, column]);\n  // Items with responsive\n  const mergedItems = useItems(screens, items, children);\n  const mergedSize = useSize(customizeSize);\n  const rows = useRow(mergedColumn, mergedItems);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  // ======================== Render ========================\n  const contextValue = React.useMemo(() => {\n    var _a, _b, _c, _d;\n    return {\n      labelStyle,\n      contentStyle,\n      styles: {\n        content: Object.assign(Object.assign({}, (_a = descriptions === null || descriptions === void 0 ? void 0 : descriptions.styles) === null || _a === void 0 ? void 0 : _a.content), styles === null || styles === void 0 ? void 0 : styles.content),\n        label: Object.assign(Object.assign({}, (_b = descriptions === null || descriptions === void 0 ? void 0 : descriptions.styles) === null || _b === void 0 ? void 0 : _b.label), styles === null || styles === void 0 ? void 0 : styles.label)\n      },\n      classNames: {\n        label: classNames((_c = descriptions === null || descriptions === void 0 ? void 0 : descriptions.classNames) === null || _c === void 0 ? void 0 : _c.label, descriptionsClassNames === null || descriptionsClassNames === void 0 ? void 0 : descriptionsClassNames.label),\n        content: classNames((_d = descriptions === null || descriptions === void 0 ? void 0 : descriptions.classNames) === null || _d === void 0 ? void 0 : _d.content, descriptionsClassNames === null || descriptionsClassNames === void 0 ? void 0 : descriptionsClassNames.content)\n      }\n    };\n  }, [labelStyle, contentStyle, styles, descriptionsClassNames, descriptions]);\n  return wrapCSSVar(/*#__PURE__*/React.createElement(DescriptionsContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: classNames(prefixCls, descriptions === null || descriptions === void 0 ? void 0 : descriptions.className, (_a = descriptions === null || descriptions === void 0 ? void 0 : descriptions.classNames) === null || _a === void 0 ? void 0 : _a.root, descriptionsClassNames === null || descriptionsClassNames === void 0 ? void 0 : descriptionsClassNames.root, {\n      [`${prefixCls}-${mergedSize}`]: mergedSize && mergedSize !== 'default',\n      [`${prefixCls}-bordered`]: !!bordered,\n      [`${prefixCls}-rtl`]: direction === 'rtl'\n    }, className, rootClassName, hashId, cssVarCls),\n    style: Object.assign(Object.assign(Object.assign(Object.assign({}, descriptions === null || descriptions === void 0 ? void 0 : descriptions.style), (_b = descriptions === null || descriptions === void 0 ? void 0 : descriptions.styles) === null || _b === void 0 ? void 0 : _b.root), styles === null || styles === void 0 ? void 0 : styles.root), style)\n  }, restProps), (title || extra) && (/*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${prefixCls}-header`, (_c = descriptions === null || descriptions === void 0 ? void 0 : descriptions.classNames) === null || _c === void 0 ? void 0 : _c.header, descriptionsClassNames === null || descriptionsClassNames === void 0 ? void 0 : descriptionsClassNames.header),\n    style: Object.assign(Object.assign({}, (_d = descriptions === null || descriptions === void 0 ? void 0 : descriptions.styles) === null || _d === void 0 ? void 0 : _d.header), styles === null || styles === void 0 ? void 0 : styles.header)\n  }, title && (/*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${prefixCls}-title`, (_e = descriptions === null || descriptions === void 0 ? void 0 : descriptions.classNames) === null || _e === void 0 ? void 0 : _e.title, descriptionsClassNames === null || descriptionsClassNames === void 0 ? void 0 : descriptionsClassNames.title),\n    style: Object.assign(Object.assign({}, (_f = descriptions === null || descriptions === void 0 ? void 0 : descriptions.styles) === null || _f === void 0 ? void 0 : _f.title), styles === null || styles === void 0 ? void 0 : styles.title)\n  }, title)), extra && (/*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${prefixCls}-extra`, (_g = descriptions === null || descriptions === void 0 ? void 0 : descriptions.classNames) === null || _g === void 0 ? void 0 : _g.extra, descriptionsClassNames === null || descriptionsClassNames === void 0 ? void 0 : descriptionsClassNames.extra),\n    style: Object.assign(Object.assign({}, (_h = descriptions === null || descriptions === void 0 ? void 0 : descriptions.styles) === null || _h === void 0 ? void 0 : _h.extra), styles === null || styles === void 0 ? void 0 : styles.extra)\n  }, extra)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-view`\n  }, /*#__PURE__*/React.createElement(\"table\", null, /*#__PURE__*/React.createElement(\"tbody\", null, rows.map((row, index) => (/*#__PURE__*/React.createElement(Row, {\n    key: index,\n    index: index,\n    colon: colon,\n    prefixCls: prefixCls,\n    vertical: layout === 'vertical',\n    bordered: bordered,\n    row: row\n  })))))))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Descriptions.displayName = 'Descriptions';\n}\nexport { DescriptionsContext };\nDescriptions.Item = DescriptionsItem;\nexport default Descriptions;","map":null,"metadata":{},"sourceType":"module"}